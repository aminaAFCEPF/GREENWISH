package fr.afcepf.ai100.g3;
// Generated 28 avr. 2017 11:29:33 by Hibernate Tools 4.3.1


import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Messagerie generated by hbm2java
 */
@Entity
@Table(name="messagerie"
    ,catalog="greenwish"
)
public class Messagerie  implements java.io.Serializable {


     /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer idmessagerie;
     private Participant participant;
     private List<Participant> participants = new ArrayList<>();
     private List<Message> messages = new ArrayList<>();

    public Messagerie() {
    }

	
    public Messagerie(Participant participant) {
        this.participant = participant;
    }
    public Messagerie(Participant participant, List<Participant> participants, List<Message> messages) {
       this.participant = participant;
       this.participants = participants;
       this.messages = messages;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="IDMESSAGERIE", unique=true, nullable=false)
    public Integer getIdmessagerie() {
        return this.idmessagerie;
    }
    
    public void setIdmessagerie(Integer idmessagerie) {
        this.idmessagerie = idmessagerie;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="IDPARTICIPANT", nullable=false)
    public Participant getParticipant() {
        return this.participant;
    }
    
    public void setParticipant(Participant participant) {
        this.participant = participant;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="messagerie")
    public List<Participant> getParticipants() {
        return this.participants;
    }
    
    public void setParticipants(List<Participant> participants) {
        this.participants = participants;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="messagerie")
    public List<Message> getMessages() {
        return this.messages;
    }
    
    public void setMessages(List<Message> messages) {
        this.messages = messages;
    }




}


