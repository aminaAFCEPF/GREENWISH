package fr.afcepf.ai100.g3;
// Generated 28 avr. 2017 11:29:33 by Hibernate Tools 4.3.1


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * TrancheAge generated by hbm2java
 */
@Entity
@Table(name="tranche_age"
    ,catalog="greenwish"
)
public class TrancheAge  implements java.io.Serializable {


     /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer idage;
     private int ageMini;
     private Integer ageMaxi;
     private List<Objet> objets = new ArrayList<>();
     private List<Souhait> souhaits = new ArrayList<>();

    public TrancheAge() {
    }

	
    public TrancheAge(int ageMini) {
        this.ageMini = ageMini;
    }
    public TrancheAge(int ageMini, Integer ageMaxi, List<Objet> objets, List<Souhait> souhaits) {
       this.ageMini = ageMini;
       this.ageMaxi = ageMaxi;
       this.objets = objets;
       this.souhaits = souhaits;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="IDAGE", unique=true, nullable=false)
    public Integer getIdage() {
        return this.idage;
    }
    
    public void setIdage(Integer idage) {
        this.idage = idage;
    }

    
    @Column(name="AGE_MINI", nullable=false)
    public int getAgeMini() {
        return this.ageMini;
    }
    
    public void setAgeMini(int ageMini) {
        this.ageMini = ageMini;
    }

    
    @Column(name="AGE_MAXI")
    public Integer getAgeMaxi() {
        return this.ageMaxi;
    }
    
    public void setAgeMaxi(Integer ageMaxi) {
        this.ageMaxi = ageMaxi;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="trancheAge")
    public List<Objet> getObjets() {
        return this.objets;
    }
    
    public void setObjets(List<Objet> objets) {
        this.objets = objets;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="trancheAge")
    public List<Souhait> getSouhaits() {
        return this.souhaits;
    }
    
    public void setSouhaits(List<Souhait> souhaits) {
        this.souhaits = souhaits;
    }




}


