package fr.afcepf.ai100.g3;
// Generated 28 avr. 2017 11:29:33 by Hibernate Tools 4.3.1


import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Echange generated by hbm2java
 */
@Entity
@Table(name="echange"
    ,catalog="greenwish"
)
public class Echange  implements java.io.Serializable {


     /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer idechange;
     private Avis avis;
     private Litige litige;
     private Objet objet;
     private Rdv rdv;
     private Date dateactivation;
     private Date daterefus;
     private Date datelitige;
     private Date dateFin;
     private String codefin;
     private int valeur;
     private List<Litige> litiges = new ArrayList<>();
     private List<Refus> refus = new ArrayList<>();
     private List<Message> messages = new ArrayList<>();

    public Echange() {
    }

	
    public Echange(Avis avis, Objet objet, int valeur) {
        this.avis = avis;
        this.objet = objet;
        this.valeur = valeur;
    }
    public Echange(Avis avis, Litige litige, Objet objet, Rdv rdv, Date dateactivation, Date daterefus, Date datelitige, String codefin, int valeur, List<Litige> litiges, List<Refus> refus) {
       this.avis = avis;
       this.litige = litige;
       this.objet = objet;
       this.rdv = rdv;
       this.dateactivation = dateactivation;
       this.daterefus = daterefus;
       this.datelitige = datelitige;
       this.codefin = codefin;
       this.valeur = valeur;
       this.litiges = litiges;
       this.refus = refus;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="IDECHANGE", unique=true, nullable=false)
    public Integer getIdechange() {
        return this.idechange;
    }
    
    public void setIdechange(Integer idechange) {
        this.idechange = idechange;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="IDAVIS", nullable=true)
    public Avis getAvis() {
        return this.avis;
    }
    
    public void setAvis(Avis avis) {
        this.avis = avis;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="IDLITIGE")
    public Litige getLitige() {
        return this.litige;
    }
    
    public void setLitige(Litige litige) {
        this.litige = litige;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="IDOBJET", nullable=false)
    public Objet getObjet() {
        return this.objet;
    }
    
    public void setObjet(Objet objet) {
        this.objet = objet;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="IDRDV", nullable=true)
    public Rdv getRdv() {
        return this.rdv;
    }
    
    public void setRdv(Rdv rdv) {
        this.rdv = rdv;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DATEACTIVATION", length=19)
    public Date getDateactivation() {
        return this.dateactivation;
    }
    
    public void setDateactivation(Date dateactivation) {
        this.dateactivation = dateactivation;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DATEREFUS", length=19)
    public Date getDaterefus() {
        return this.daterefus;
    }
    
    public void setDaterefus(Date daterefus) {
        this.daterefus = daterefus;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DATELITIGE", length=19)
    public Date getDatelitige() {
        return this.datelitige;
    }
    
    public void setDatelitige(Date datelitige) {
        this.datelitige = datelitige;
    }
    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DATEFIN", length=19)
    public Date getDateFin() {
        return this.dateFin;
    }
    
    public void setDateFin(Date dateFin) {
        this.dateFin = dateFin;
    }

    
    @Column(name="CODEFIN", length=50)
    public String getCodefin() {
        return this.codefin;
    }
    
    public void setCodefin(String codefin) {
        this.codefin = codefin;
    }

    
    @Column(name="VALEUR", nullable=false)
    public int getValeur() {
        return this.valeur;
    }
    
    public void setValeur(int valeur) {
        this.valeur = valeur;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="echange")
    public List<Litige> getLitiges() {
        return this.litiges;
    }
    
    public void setLitiges(List<Litige> litiges) {
        this.litiges = litiges;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="refuse", catalog="greenwish", joinColumns = { 
        @JoinColumn(name="IDECHANGE", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="IDREFUS", nullable=false, updatable=false) })
    public List<Refus> getrefus() {
        return this.refus;
    }
    
    public void setrefus(List<Refus> refus) {
        this.refus = refus;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="echange")
	public List<Message> getMessages() {
		return messages;
	}


	public void setMessages(List<Message> messages) {
		this.messages = messages;
	}




}


